apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sadp-ingress
  namespace: sadp
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  tls:
  - hosts:
    - api.sadp.sarthi.health
    secretName: sadp-tls
  rules:
  - host: api.sadp.sarthi.health
    http:
      paths:
      - path: /agent-runtime
        pathType: Prefix
        backend:
          service:
            name: agent-runtime-service
            port:
              number: 80
      - path: /evaluation
        pathType: Prefix
        backend:
          service:
            name: evaluation-service
            port:
              number: 80
      - path: /development
        pathType: Prefix
        backend:
          service:
            name: development-service
            port:
              number: 80
      - path: /monitoring
        pathType: Prefix
        backend:
          service:
            name: monitoring-service
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: cloud-sql-proxy
  namespace: sadp
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  selector:
    app: cloud-sql-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloud-sql-proxy
  namespace: sadp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloud-sql-proxy
  template:
    metadata:
      labels:
        app: cloud-sql-proxy
    spec:
      serviceAccountName: agent-runtime-sa
      containers:
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.7.0
        args:
        - "--structured-logs"
        - "--port=5432"
        - "sarthi-patient-experience-hub:us-central1:sarthi-sql-instance"
        ports:
        - containerPort: 5432
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"